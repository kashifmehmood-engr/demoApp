name: Build and Push Docker Image

# Define the events that trigger this workflow
on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the 'main' branch

# Define permissions needed for the workflow
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu runner for the job
    environment: dev

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up JDK (Optional, if not already available)
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'zulu'

    # Step 3: Build the project using Maven
    - name: Build with Maven
      run: mvn clean install -DskipTests


    # Step 4: Build the Docker image
    - name: Build Docker image
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_URL }}
        REPOSITORY: ${{ secrets.REPOSITORY }}
      run: |
        docker build -t "$ECR_REGISTRY/$REPOSITORY:${{ github.sha }}" .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/${{ secrets.GH_IAM_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: ${{ secrets.aws_account_id }}

    - name: push image to Amazon ECR
      id: build-publish
      shell: bash
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_URL }}
        REPOSITORY: ${{ secrets.REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "$ECR_REGISTRY"
        echo "$ECR_REPOSITORY"
        docker images
        docker push "$ECR_REGISTRY/$REPOSITORY:${IMAGE_TAG}"
      
    
    - name: Update kubeconfig for EKS cluster
      shell: bash
      env:
        REGION: ${{ secrets.AWS_REGION }}
        CLUSTER: ${{ secrets.EKS_CLUSTER }}
      run: |
        aws eks update-kubeconfig --region $REGION --name $CLUSTER
    # Step 4: Install Helm
    - name: Install Helm
    
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    # Step 5: Deploy Helm Chart
    - name: Deploy Helm Chart to EKS
      run: |
        helm upgrade --install  demo-app helm/demo-app/ \
          --namespace default \
          --set image.repository=$GITHUB_REPOSITORY \
          --set image.tag=${{ github.sha }} \
          --values values.yaml  # Pass a values.yaml file if needed
